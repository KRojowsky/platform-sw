# Generated by Django 3.2.19 on 2024-12-14 20:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('website', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog-category-images/')),
            ],
            options={
                'verbose_name': 'Kategorie - Blog',
                'verbose_name_plural': 'Kategorie - Blog',
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(default='')),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog-list-images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_new', models.BooleanField(default=False, verbose_name='Nowość')),
                ('is_trending', models.BooleanField(default=False, verbose_name='Na czasie')),
                ('views', models.PositiveIntegerField(default=0)),
                ('likes', models.PositiveIntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Posty - Blog',
                'verbose_name_plural': 'Posty - Blog',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('postUpdated', models.DateTimeField(auto_now=True)),
                ('postCreated', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='room-images/')),
                ('event_datetime', models.DateTimeField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('schoolweb_rating', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], null=True)),
                ('feedback_submitted', models.BooleanField(default=False)),
                ('invite_code', models.CharField(blank=True, max_length=10, unique=True)),
            ],
            options={
                'verbose_name': 'Lekcje - Strefa Korepetycji',
                'verbose_name_plural': 'Lekcje - Strefa Korepetycji',
            },
        ),
        migrations.CreateModel(
            name='PlatformMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator('^\\d{9}$', message='Numer telefonu musi składać się z 9 cyfr.')])),
                ('message', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Wiadomości z Platformy',
                'verbose_name_plural': 'Wiadomości z Platformy',
            },
        ),
        migrations.AlterModelOptions(
            name='course',
            options={'verbose_name': 'Kursy - Strefa Korepetycji', 'verbose_name_plural': 'Kursy - Strefa Korepetycji'},
        ),
        migrations.AlterModelOptions(
            name='coursemessage',
            options={'verbose_name': 'Komentarze - Strefa Korepetycji', 'verbose_name_plural': 'Komentarze - Strefa Korepetycji'},
        ),
        migrations.AlterModelOptions(
            name='message',
            options={'verbose_name': 'Komentarze - Strefa Wiedzy', 'verbose_name_plural': 'Komentarze - Strefa Wiedzy'},
        ),
        migrations.AlterModelOptions(
            name='room',
            options={'verbose_name': 'Posty - Strefa Wiedzy', 'verbose_name_plural': 'Posty - Strefa Wiedzy'},
        ),
        migrations.AlterModelOptions(
            name='topic',
            options={'verbose_name': 'Kategorie - Strefa Wiedzy', 'verbose_name_plural': 'Kategorie - Strefa Wiedzy'},
        ),
        migrations.AddField(
            model_name='course',
            name='course_type',
            field=models.CharField(choices=[('basic', 'Podstawowy'), ('intermediate', 'Rozszerzony')], default='basic', max_length=20),
        ),
        migrations.AddField(
            model_name='course',
            name='student',
            field=models.CharField(default='', max_length=200),
        ),
        migrations.AddField(
            model_name='coursemessage',
            name='file',
            field=models.FileField(blank=True, null=True, upload_to='message-files/'),
        ),
        migrations.AddField(
            model_name='coursemessage',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='message-images/'),
        ),
        migrations.AddField(
            model_name='message',
            name='file',
            field=models.FileField(blank=True, null=True, upload_to='message-files/'),
        ),
        migrations.AddField(
            model_name='message',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='liked_messages', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='room',
            name='image',
            field=models.ImageField(blank=True, null=True, upload_to='room-images/'),
        ),
        migrations.AddField(
            model_name='room',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='liked_rooms', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='topic',
            name='svg_icon',
            field=models.FileField(blank=True, null=True, upload_to='icons/'),
        ),
        migrations.AddField(
            model_name='user',
            name='avatar',
            field=models.ImageField(blank=True, default='profile-pictures/avatar.svg', null=True, upload_to='profile-pictures/'),
        ),
        migrations.AddField(
            model_name='user',
            name='bio',
            field=models.TextField(default='Brak opisu', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='interests',
            field=models.TextField(blank=True, default='Brak zainteresowań', null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='name',
            field=models.CharField(max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='phone_number',
            field=models.CharField(default='N/A', max_length=20),
        ),
        migrations.AlterField(
            model_name='message',
            name='room',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.room'),
        ),
        migrations.AlterField(
            model_name='message',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='room',
            name='host',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='topic',
            name='name',
            field=models.CharField(max_length=200, unique=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=254, null=True, unique=True),
        ),
        migrations.CreateModel(
            name='TeachersEarning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_earnings', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('month', models.PositiveIntegerField(default=12)),
                ('year', models.PositiveIntegerField(default=2024)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wypłata',
                'verbose_name_plural': 'Wypłaty',
                'unique_together': {('user', 'month', 'year')},
            },
        ),
        migrations.CreateModel(
            name='Resign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('reason', models.CharField(choices=[('Przerwa', 'Przerwa'), ('Rezygnacja', 'Rezygnacja')], max_length=20)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('course_info', models.TextField(blank=True, null=True)),
                ('rating', models.IntegerField(blank=True, choices=[(1, 'Źle'), (2, 'Słabo'), (3, 'Przeciętnie'), (4, 'Dobrze'), (5, 'Fantastycznie')], null=True)),
                ('consider_return', models.CharField(blank=True, choices=[('Tak', 'Tak'), ('Nie', 'Nie')], max_length=3, null=True)),
                ('reason_details', models.TextField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Rezygnacje',
                'verbose_name_plural': 'Rezygnacje',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('SPAM', 'Spam'), ('INAPPROPRIATE', 'Nieodpowiednia treść'), ('HARASSMENT', 'Nękanie'), ('FALSE_INFO', 'Fałszywe informacje'), ('HATE_SPEECH', 'Mowa nienawiści'), ('VIOLENCE', 'Przemoc'), ('COPYRIGHT', 'Naruszenie praw autorskich'), ('OTHER', 'Inne')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='website.room')),
            ],
            options={
                'verbose_name': 'Zgłoszenia - Strefa Wiedzy',
                'verbose_name_plural': 'Zgłoszenia - Strefa Wiedzy',
            },
        ),
        migrations.CreateModel(
            name='LessonStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lessons', models.IntegerField(default=0)),
                ('lessons_intermediate', models.IntegerField(default=0)),
                ('break_lessons', models.IntegerField(default=0)),
                ('all_break_lessons', models.IntegerField(default=0)),
                ('missed_lessons', models.IntegerField(default=0)),
                ('all_missed_lessons', models.IntegerField(default=0)),
                ('all_lessons', models.IntegerField(default=0)),
                ('all_lessons_intermediate', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Lekcje - statystyki',
                'verbose_name_plural': 'Lekcje - statystyki',
            },
        ),
        migrations.CreateModel(
            name='LessonCorrection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.TextField(blank=True, default='', null=True)),
                ('lesson_image', models.ImageField(blank=True, null=True, upload_to='lesson_images/')),
                ('attended_students', models.ManyToManyField(blank=True, related_name='attended_students', to=settings.AUTH_USER_MODEL)),
                ('attended_teachers', models.ManyToManyField(blank=True, related_name='attended_teachers', to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='website.lesson')),
            ],
            options={
                'verbose_name': 'Poprawki lekcji',
                'verbose_name_plural': 'Poprawki lekcji',
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='attended_students',
            field=models.ManyToManyField(blank=True, related_name='attended_students_lessons', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lesson',
            name='attended_teachers',
            field=models.ManyToManyField(blank=True, related_name='attended_teachers_lessons', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lesson',
            name='clicked_users',
            field=models.ManyToManyField(blank=True, related_name='clicked_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lesson',
            name='course',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='website.course'),
        ),
        migrations.AddField(
            model_name='lesson',
            name='host',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='lesson',
            name='participants',
            field=models.ManyToManyField(blank=True, related_name='postParticipants', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ContentBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('block_type', models.CharField(choices=[('text', 'Text'), ('image', 'Image')], max_length=10)),
                ('order', models.PositiveIntegerField()),
                ('text', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog-details-images/')),
                ('blog_post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_blocks', to='website.blogpost')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='blogpost',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='blogpost',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to='website.blogcategory'),
        ),
        migrations.CreateModel(
            name='BankInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(max_length=16, unique=True)),
                ('cvv', models.CharField(max_length=3)),
                ('cardholder_name', models.CharField(max_length=100)),
                ('expiration_date', models.DateField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bank_information', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Informacje bankowe',
                'verbose_name_plural': 'Informacje bankowe',
            },
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.DateField()),
                ('hour_6_7', models.BooleanField(default=False)),
                ('hour_7_8', models.BooleanField(default=False)),
                ('hour_8_9', models.BooleanField(default=False)),
                ('hour_9_10', models.BooleanField(default=False)),
                ('hour_10_11', models.BooleanField(default=False)),
                ('hour_11_12', models.BooleanField(default=False)),
                ('hour_12_13', models.BooleanField(default=False)),
                ('hour_13_14', models.BooleanField(default=False)),
                ('hour_14_15', models.BooleanField(default=False)),
                ('hour_15_16', models.BooleanField(default=False)),
                ('hour_16_17', models.BooleanField(default=False)),
                ('hour_17_18', models.BooleanField(default=False)),
                ('hour_18_19', models.BooleanField(default=False)),
                ('hour_19_20', models.BooleanField(default=False)),
                ('hour_20_21', models.BooleanField(default=False)),
                ('hour_21_22', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dostępności',
                'verbose_name_plural': 'Dostępności',
            },
        ),
        migrations.AlterField(
            model_name='coursemessage',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.lesson'),
        ),
        migrations.DeleteModel(
            name='Post',
        ),
    ]
